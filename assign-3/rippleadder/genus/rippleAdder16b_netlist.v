
// Generated by Cadence Genus(TM) Synthesis Solution 16.21-s018_1
// Generated on: Sep 27 2019 22:26:20 IST (Sep 27 2019 16:56:20 UTC)

// Verification Directory fv/rippleAdder16b 

module fullAdder(a, b, c, s_out, c_out);
  input a, b, c;
  inout s_out, c_out;
  wire a, b, c;
  wire s_out, c_out;
  ADDFX1 g55(.A (b), .B (a), .CI (c), .CO (c_out), .S (s_out));
endmodule

module fullAdder_1(a, b, c, s_out, c_out);
  input a, b, c;
  inout s_out, c_out;
  wire a, b, c;
  wire s_out, c_out;
  ADDFX1 g55(.A (b), .B (a), .CI (c), .CO (c_out), .S (s_out));
endmodule

module fullAdder_2(a, b, c, s_out, c_out);
  input a, b, c;
  inout s_out, c_out;
  wire a, b, c;
  wire s_out, c_out;
  ADDFX1 g55(.A (b), .B (a), .CI (c), .CO (c_out), .S (s_out));
endmodule

module fullAdder_3(a, b, c, s_out, c_out);
  input a, b, c;
  inout s_out, c_out;
  wire a, b, c;
  wire s_out, c_out;
  ADDFX1 g55(.A (b), .B (a), .CI (c), .CO (c_out), .S (s_out));
endmodule

module rippleAdder4b(a, b, c, s_out, c_out);
  input [3:0] a, b;
  input c;
  inout [3:0] s_out;
  inout c_out;
  wire [3:0] a, b;
  wire c;
  wire [3:0] s_out;
  wire c_out;
  wire carry0, carry1, carry2;
  fullAdder fa1(a[0], b[0], c, s_out[0], carry0);
  fullAdder_1 fa2(a[1], b[1], carry0, s_out[1], carry1);
  fullAdder_2 fa3(a[2], b[2], carry1, s_out[2], carry2);
  fullAdder_3 fa4(a[3], b[3], carry2, s_out[3], c_out);
endmodule

module fullAdder_4(a, b, c, s_out, c_out);
  input a, b, c;
  inout s_out, c_out;
  wire a, b, c;
  wire s_out, c_out;
  ADDFX1 g55(.A (b), .B (a), .CI (c), .CO (c_out), .S (s_out));
endmodule

module fullAdder_5(a, b, c, s_out, c_out);
  input a, b, c;
  inout s_out, c_out;
  wire a, b, c;
  wire s_out, c_out;
  ADDFX1 g55(.A (b), .B (a), .CI (c), .CO (c_out), .S (s_out));
endmodule

module fullAdder_6(a, b, c, s_out, c_out);
  input a, b, c;
  inout s_out, c_out;
  wire a, b, c;
  wire s_out, c_out;
  ADDFX1 g55(.A (b), .B (a), .CI (c), .CO (c_out), .S (s_out));
endmodule

module fullAdder_7(a, b, c, s_out, c_out);
  input a, b, c;
  inout s_out, c_out;
  wire a, b, c;
  wire s_out, c_out;
  ADDFX1 g55(.A (b), .B (a), .CI (c), .CO (c_out), .S (s_out));
endmodule

module rippleAdder4b_1(a, b, c, s_out, c_out);
  input [3:0] a, b;
  input c;
  inout [3:0] s_out;
  inout c_out;
  wire [3:0] a, b;
  wire c;
  wire [3:0] s_out;
  wire c_out;
  wire carry0, carry1, carry2;
  fullAdder_4 fa1(.a (a[0]), .b (b[0]), .c (c), .s_out (s_out[0]),
       .c_out (carry0));
  fullAdder_5 fa2(.a (a[1]), .b (b[1]), .c (carry0), .s_out (s_out[1]),
       .c_out (carry1));
  fullAdder_6 fa3(.a (a[2]), .b (b[2]), .c (carry1), .s_out (s_out[2]),
       .c_out (carry2));
  fullAdder_7 fa4(.a (a[3]), .b (b[3]), .c (carry2), .s_out (s_out[3]),
       .c_out (c_out));
endmodule

module fullAdder_8(a, b, c, s_out, c_out);
  input a, b, c;
  inout s_out, c_out;
  wire a, b, c;
  wire s_out, c_out;
  ADDFX1 g55(.A (b), .B (a), .CI (c), .CO (c_out), .S (s_out));
endmodule

module fullAdder_9(a, b, c, s_out, c_out);
  input a, b, c;
  inout s_out, c_out;
  wire a, b, c;
  wire s_out, c_out;
  ADDFX1 g55(.A (b), .B (a), .CI (c), .CO (c_out), .S (s_out));
endmodule

module fullAdder_10(a, b, c, s_out, c_out);
  input a, b, c;
  inout s_out, c_out;
  wire a, b, c;
  wire s_out, c_out;
  ADDFX1 g55(.A (b), .B (a), .CI (c), .CO (c_out), .S (s_out));
endmodule

module fullAdder_11(a, b, c, s_out, c_out);
  input a, b, c;
  inout s_out, c_out;
  wire a, b, c;
  wire s_out, c_out;
  ADDFX1 g55(.A (b), .B (a), .CI (c), .CO (c_out), .S (s_out));
endmodule

module rippleAdder4b_2(a, b, c, s_out, c_out);
  input [3:0] a, b;
  input c;
  inout [3:0] s_out;
  inout c_out;
  wire [3:0] a, b;
  wire c;
  wire [3:0] s_out;
  wire c_out;
  wire carry0, carry1, carry2;
  fullAdder_8 fa1(.a (a[0]), .b (b[0]), .c (c), .s_out (s_out[0]),
       .c_out (carry0));
  fullAdder_9 fa2(.a (a[1]), .b (b[1]), .c (carry0), .s_out (s_out[1]),
       .c_out (carry1));
  fullAdder_10 fa3(.a (a[2]), .b (b[2]), .c (carry1), .s_out
       (s_out[2]), .c_out (carry2));
  fullAdder_11 fa4(.a (a[3]), .b (b[3]), .c (carry2), .s_out
       (s_out[3]), .c_out (c_out));
endmodule

module fullAdder_12(a, b, c, s_out, c_out);
  input a, b, c;
  inout s_out, c_out;
  wire a, b, c;
  wire s_out, c_out;
  ADDFX1 g55(.A (b), .B (a), .CI (c), .CO (c_out), .S (s_out));
endmodule

module fullAdder_13(a, b, c, s_out, c_out);
  input a, b, c;
  inout s_out, c_out;
  wire a, b, c;
  wire s_out, c_out;
  ADDFX1 g55(.A (b), .B (a), .CI (c), .CO (c_out), .S (s_out));
endmodule

module fullAdder_14(a, b, c, s_out, c_out);
  input a, b, c;
  inout s_out, c_out;
  wire a, b, c;
  wire s_out, c_out;
  ADDFX1 g55(.A (b), .B (a), .CI (c), .CO (c_out), .S (s_out));
endmodule

module fullAdder_15(a, b, c, s_out, c_out);
  input a, b, c;
  inout s_out, c_out;
  wire a, b, c;
  wire s_out, c_out;
  ADDFXL g55(.A (a), .B (b), .CI (c), .CO (c_out), .S (s_out));
endmodule

module rippleAdder4b_3(a, b, c, s_out, c_out);
  input [3:0] a, b;
  input c;
  inout [3:0] s_out;
  inout c_out;
  wire [3:0] a, b;
  wire c;
  wire [3:0] s_out;
  wire c_out;
  wire carry0, carry1, carry2;
  fullAdder_12 fa1(.a (a[0]), .b (b[0]), .c (c), .s_out (s_out[0]),
       .c_out (carry0));
  fullAdder_13 fa2(.a (a[1]), .b (b[1]), .c (carry0), .s_out
       (s_out[1]), .c_out (carry1));
  fullAdder_14 fa3(.a (a[2]), .b (b[2]), .c (carry1), .s_out
       (s_out[2]), .c_out (carry2));
  fullAdder_15 fa4(.a (a[3]), .b (b[3]), .c (carry2), .s_out
       (s_out[3]), .c_out (c_out));
endmodule

module rippleAdder16b(a, b, c, s_out, c_out);
  input [15:0] a, b;
  input c;
  inout [15:0] s_out;
  inout c_out;
  wire [15:0] a, b;
  wire c;
  wire [15:0] s_out;
  wire c_out;
  wire carry0, carry1, carry2;
  rippleAdder4b ra1(a[3:0], b[3:0], c, s_out[3:0], carry0);
  rippleAdder4b_1 ra2(a[7:4], b[7:4], carry0, s_out[7:4], carry1);
  rippleAdder4b_2 ra3(a[11:8], b[11:8], carry1, s_out[11:8], carry2);
  rippleAdder4b_3 ra4(a[15:12], b[15:12], carry2, s_out[15:12], c_out);
endmodule

